<tool id="bellavista_prepare" name="Bellavista" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Prepare large images for bellavista visualizer</description>
    <creator>
        <organization name="European Galaxy Team" url="https://galaxyproject.org/eu/" />
        <person givenName="Amirhossein" familyName="Naghsh Nilchi" email="nilchia@informatik.uni-freiburg.de" />
        <person givenName="Pavan" familyName="Videm" email="videmp@informatik.uni-freiburg.de" />
        <person givenName="Björn" familyName="Grüning" email="gruening@informatik.uni-freiburg.de" />
    </creator>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        export BELLAVISTA_DIR=`pwd`/input/ &&
        mkdir 'input' 'input/BellaVista_output' &&
        chmod -R 777 'input/' &&
        #if $technology_conditional.plot_genes.plot_transcripts == "true":
            ln -s '$technology_conditional.plot_genes.transcript_filename' './input/${technology_conditional.plot_genes.transcript_filename.element_identifier}.${technology_conditional.plot_genes.transcript_filename.ext}' &&
        #end if
        #for $image in $technology_conditional.images:
            ln -s '$image' 'input/${image.element_identifier}.${image.ext}' &&
        #end for
        ln -s '$bellavista_config_file' './input/config.json' &&
        #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
            ln -s '$technology_conditional.plot_cell_segmentation.cell_segmentation' './input/${technology_conditional.plot_cell_segmentation.cell_segmentation.element_identifier}.${technology_conditional.plot_cell_segmentation.cell_segmentation.ext}' &&
        #end if
        #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
            ln -s '$technology_conditional.plot_nuclear_segmentation.nuclear_segmentation' './input/${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.element_identifier}.${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.ext}' &&
        #end if
        #if $technology_conditional.technology == "MERSCOPE":
            ln -s '$technology_conditional.um_to_px_transform' ./input/micron_to_mosaic_pixel_transform.csv &&
        #end if
        cat ./input/config.json &&
        /init
    ]]></command>
    <configfiles>
        <configfile name="bellavista_config_file"><![CDATA[
            {
                "system": "$technology",
                "data_folder": "./",
                "create_bellavista_inputs": true,

                "visualization_parameters": {
                    "plot_image": true,
                    #if $technology_conditional.plot_genes.plot_transcripts == "true":
                    "plot_transcripts": true,
                    #else
                    "plot_transcripts": false,
                    #end if
                    #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
                    "plot_cell_seg": true,
                    #else
                    "plot_cell_seg": false,
                    #end if
                    #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
                    "plot_nuclear_seg": true,
                    #else
                    "plot_nuclear_seg": false,
                    #end if
                    "genes_visible_on_startup": false,
                    #if $technology_conditional.plot_genes.plot_all_genes.all_genes == "Yes":
                    "plot_allgenes": true,
                    #else
                    "plot_allgenes": false,
                    #set $gene_list = ['"' + str(x.strip()) + '"' for x in str($technology_conditional.plot_genes.plot_all_genes.selected_genes).split(',')]
                    #set $genes = ','.join($gene_list)
                    "selected_genes": $genes,
                    #end if
                    "rotate_angle": $rotate_angle,
                    "transcript_point_size": $transcript_point_size
                },

                "input_files": {
                    #set $last_index = len($technology_conditional.images) - 1
                    "images": [
                    #for $i in range(len($images)):
                        "$images[$i].element_identifier.$images[$i].ext"#if $i != $last_index#,#end if
                    #end for
                    ],
                    #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
                    "cell_segmentation": "${technology_conditional.plot_cell_segmentation.cell_segmentation.element_identifier}.${technology_conditional.plot_cell_segmentation.cell_segmentation.ext}",
                    #end if
                    #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
                    "nuclear_segmentation": "${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.element_identifier}.${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.ext}",
                    #end if
                    #if $technology_conditional.technology == "MERSCOPE":
                    "um_to_px_transform": "micron_to_mosaic_pixel_transform.csv",
                    #end if
                    #if $technology_conditional.plot_genes.plot_transcripts == "true":
                    "transcript_filename": "${technology_conditional.plot_genes.transcript_filename.element_identifier}.${technology_conditional.plot_genes.transcript_filename.ext}",
                    #end if
                    "z_plane": $technology_conditional.z_plane
                }
            }
        ]]></configfile>
    </configfiles>
    <inputs>
        <conditional name="technology_conditional">
            <param name="technology" type="select" label="Spatial transcriptomic technology">
                <option value="Xenium">Xenium</option>
                <option value="MERSCOPE" selected="true">MERSCOPE</option>
            </param>
            <when value="Xenium">
                <expand macro="common_param"/>
            </when>
            <when value="MERSCOPE">
                <expand macro="common_param">
                    <param name="um_to_px_transform" type="data" format="csv" optional="false" label="micron to pixel transformations"/>
                </expand>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="config" format="json" label="${tool.name} on ${on_string}: config file" from_work_dir="input/config.json" />
    </outputs>
    <tests>
    </tests>
    <help><![CDATA[
BellaVista is an open-source visualization tool for imaging-based spatial transcriptomics data. It allows users to visualize and explore spatial transcriptomics data in a user-friendly interface. The tool supports MERSCOPE and Xenium imaging-based spatial transcriptomics technologies.

Users can customize the visualization by selecting specific genes, adjusting image rotation angles, and controlling the size of transcript points. BellaVista also provides options for plotting cell and nuclear segmentation, enhancing the exploration of spatial transcriptomics data.

.. image:: https://raw.githubusercontent.com/pkosurilab/BellaVista/c8129bb8954c92962a87606595c09b35cc414295/images/bellavista_figure.png
    :height: 500
    :width: 700
    ]]>
    </help>
    <expand macro="citations"/>
</tool>
