<macros>
    <!-- requirements -->
    <xml name="requirement">
        <requirement type="package" version="3.3.8">pcdl</requirement>
    </xml>
    <!-- input -->
    <xml name="aggregate_num">
        <param name="aggregate_num" label="aggregate_num" type="select" display="radio" help="aggregation function {max, mean, median, min, std, var} for focus_num data. default is mean.">
            <option value="max">max</option>
            <option value="mean" selected="true">mean</option>
            <option value="median">median</option>
            <option value="min">min</option>
            <option value="std">std</option>
            <option value="var">var</option>
        </param>
    </xml>
    <xml name="allvalues">
        <param name="allvalues" label="allvalues" type="boolean" truevalue="true" falsevalue="false" checked="false" help="for numeric data, should only the min and max values or all values be returned? default is false."/>
    </xml>
    <xml name="alpha">
        <param name="alpha" label="alpha" type="float" value="1.0" optional="false" help="alpha channel transparency value between 1 (not transparent at all) and 0 (totally transparent). default is 1.0."/>
    </xml>
    <xml name="attribute">
        <param name="attribute" label="attribute" type="text" value="cell_type" optional="false" help="listing of mcds.get_cell_df dataframe column names, used for cell attributes. default is a single term: cell_type."/>
    </xml>
    <xml name="cmap">
        <param name="cmap" label="cmap" type="text" value="viridis" optional="false" help="matplotlib colormap string from https://matplotlib.org/stable/tutorials/colors/colormaps.html . default is viridis."/>
    </xml>
    <xml name="collapse">
        <param name="collapse" label="collapse" type="boolean" truevalue="true" falsevalue="false" checked="true" help="should all mcds time steps from the time series be collapsed into one big anndata h5ad file, or a many h5ad, one h5ad for each time step?, default is True."/>
    </xml>
    <xml name="color">
        <param name="color" label="color" type="text" value="none" optional="false" help="listing of color strings referred to by name, RGB or RGBA code. default is None."/>
    </xml>
    <xml name="custom_data_type">
        <param name="custom_data_type" label="custom_data_type" type="text" value="" optional="true" help="parameter to specify custom_data variable types other than float (namely: int, bool, str) like this var:dtype myint:int mybool:bool mystr:str. downstream float and int will be handled as numeric, bool as Boolean, and str as categorical data. default is an empty string."/>
    </xml>
    <xml name="drop">
        <param name="drop" label="drop" type="text" value="" optional="true" help="set of column labels to be dropped for the dataframe. don't worry: essential columns like ID, coordinates and time will never be dropped. Attention: when the keep parameter is given, then the drop parameter has to be an empty string! default is an empty string."/>
    </xml>
    <xml name="edge_attribute">
        <param name="edge_attribute" label="edge_attribute" type="boolean" truevalue="true" falsevalue="false" checked="true" help="specifies if the spatial Euclidean distance is used for edge attribute, to generate a weighted graph. default is True."/>
    </xml>
    <xml name="entropy">
        <param name="entropy" label="values" type="integer" value="1" optional="false" help="minimal number of values a variable has to have in any of the mcds time steps to be outputted. variables that have only 1 state carry no information. None is a state too. default is 1."/>
    </xml>
    <xml name="ext">
        <param name="ext" label="ext" type="select" display="radio" help="output image format. possible formats are jpeg, png, and tiff. default is jpeg.">
            <option value="jpeg" selected="true">jpeg</option>
            <!--
        <option value="png">png</option>
        <option value="tiff">tiff</option>
        -->
        </param>
    </xml>
    <xml name="extrema">
        <param name="extrema" label="extrema" type="text" value="none" optional="false" help="two floats separated by a space. None takes min and max from data. default is None."/>
    </xml>
    <xml name="figbgcolor">
        <param name="figbgcolor" label="figbgcolor" type="text" value="none" optional="false" help="figure background color. None is transparent (png) or white (jpeg, tiff). default is None."/>
    </xml>
    <xml name="figsizepx">
        <param name="figsizepx" label="figsizepx" type="text" value="640 480" optional="false" help="size of the figure in pixels (integer), x y. the given x and y will be rounded to the nearest even number, to be able to generate movies from the images. default is 640 480."/>
    </xml>
    <xml name="fill">
        <param name="fill" label="fill" type="boolean" truevalue="true" falsevalue="false" checked="true" help="True generates a matplotlib contourf plot. False generates a matplotlib contour plot. default is True."/>
    </xml>
    <xml name="focus">
        <param name="focus" label="focus" type="text" value="cell_type" optional="false" help="column name from the pcdl_get_cell_attribute_list listing. default is cell_type."/>
    </xml>
    <xml name="focus_cat">
        <param name="focus_cat" label="focus_cat" type="text" value="none" optional="false" help="categorical or boolean data column within dataframe specified under frame (pcdl_get_cell_attribute_list or pcdl_get_substrate_list). default is None, which is total, which is all agents or voxels, no categories. default is None."/>
    </xml>
    <xml name="focus_num">
        <param name="focus_num" label="focus_num" type="text" value="none" optional="false" help="numerical data column within dataframe specified under frame (pcdl_get_cell_attribute_list or pcdl_get_substrate_list). default is None, which is count, agent or voxel count. default is None."/>
    </xml>
    <xml name="frame">
        <param name="frame" label="frame" type="select" display="radio" help="to specifies the data dataframe from which the values are taken. cell: agent centric value. conc: whole domain centric substarte concentration values. default is cell.">
            <option value="cell" selected="true">cell</option>
            <option value="conc">conc</option>
        </param>
    </xml>
    <xml name="framerate">
        <param name="framerate" label="values" type="integer" value="12" optional="false" help="specifies how many images per second will be used. humans are capable of processing 12 images per second and seeing them individually. higher rates are seen as motion. default is 12."/>
    </xml>
    <xml name="graph">
        <param name="graph" label="graph" type="boolean" truevalue="true" falsevalue="false" checked="true" help="should neighbor graph, attach graph, and attached spring graph be extracted and loaded into the anndata object? default is True."/>
    </xml>
    <xml name="graph_type">
        <param name="graph_type" label="graph_type" type="select" display="radio" help="specify which physicell graph output data should be processed. neighbor: neighbor graph dictionary. attached: attached graph dictionary. spring: spring attache graph dictionary.">
            <option value="neighbor" selected="true">neighbor</option>
            <option value="attached">attached</option>
            <option value="spring">spring</option>
        </param>
    </xml>
    <xml name="grid">
        <param name="grid" label="grid" type="boolean" truevalue="true" falsevalue="false" checked="true" help="plot axis grid lines. default is True."/>
    </xml>
    <xml name="interface">
        <param name="interface" label="interface" type="select" display="radio" help="specify the image format from which the gif will be generated. these images can be generated with the pcdl_plot_scatter or pcdl_plot_contour function. default is jpeg.">
            <option value="jpeg" selected="true">jpeg</option>
            <!--
        <option value="png">png</option>
        <option value="tiff">tiff</option>
        -->
        </param>
    </xml>
    <xml name="keep">
        <param name="keep" label="keep" type="text" value="" optional="true" help="set of column labels to be kept in the dataframe. set values=1 to be sure that all variables are kept. don't worry: essential columns like ID, coordinates and time will always be kept. default is an empty string."/>
    </xml>
    <xml name="legend">
        <param name="legend" label="legend" type="select" display="radio" help="if True or reverse, place legend on axis subplots. default is True.">
            <option value="false">false</option>
            <option value="reverse">reverse</option>
            <option value="true" selected="true">true</option>
        </param>
    </xml>
    <xml name="legend_loc">
        <param name="legend_loc" label="legend_loc" type="select" display="radio" help="the location of the categorical legend, if applicable. default is 'lower left'.">
            <option value="best">best</option>
            <option value="upper right">upper right</option>
            <option value="upper center"/>
            <option value="upper left"/>
            <option value="center left"/>
            <option value="lower left" selected="true"/>
            <option value="lower center"/>
            <option value="lower right"/>
            <option value="center right"/>
            <option value="center"/>
        </param>
    </xml>
    <xml name="linestyle">
        <param name="linestyle" label="linestyle" type="select" display="radio" help="matplotlib line style {-, --, .-, :} string. default is - .">
            <option value="-" selected="true">-</option>
            <option value="--">--</option>
            <option value=".-">.-</option>
            <option value=":">:</option>
        </param>
    </xml>
    <xml name="linewidth">
        <param name="linewidth" label="linewidth" type="text" value="none" optional="false" help="line width in points, integer. default is None."/>
    </xml>
    <xml name="logy">
        <param name="logy" label="logy" type="boolean" truevalue="true" falsevalue="false" checked="false" help="if True, then y axis is natural log scaled. default is False."/>
    </xml>
    <xml name="microenv">
        <param name="microenv" label="microenv" type="boolean" truevalue="true" falsevalue="false" checked="true" help="should the microenvironment be extracted and loaded into the anndata object? setting microenv to False will use less memory and speed up processing, similar to the original pyMCDS_cells.py script. default is True."/>
    </xml>
    <xml name="node_attribute">
        <param name="node_attribute" label="node_attribute" type="text" value="" optional="true" help="listing of pcdl_get_cell_attribute attributes, used for node attributes. default is and empty list."/>
    </xml>
    <xml name="path">
        <param name="path" label="data_collection" type="data_collection" collection_type="list" help="PhysiCell output data collection."/>
    </xml>
    <xml name="physiboss">
        <param name="physiboss" label="physiboss" type="boolean" truevalue="true" falsevalue="false" checked="true" help="if found, should physiboss state data be extracted and loaded into the anndata object? default is True."/>
    </xml>
    <xml name="s">
        <param name="s" label="s" type="float" value="1.0" optional="false" help="scatter plot dot size scale factor. with figsizepx extracted from initial.svg, scale factor 1.0 should be ok. adjust if necessary. default 1.0."/>
    </xml>
    <xml name="scale">
        <param name="scale" label="scale" type="select" display="radio" help="specify how the data should be scaled. possible values are None, maxabs, minmax, std. None: no scaling. set scale to None if you would like to have raw data or entirely scale, transform, and normalize the data later. maxabs: maximum absolute value distance scaler will linearly map all values into a [-1, 1] interval. if the original data has no negative values, the result will be the same as with the minmax scaler (except with attributes with only one value). if the attribute has only zeros, the value will be set to 0. minmax: minimum maximum distance scaler will map all values linearly into a [0, 1] interval. if the attribute has only one value, the value will be set to 0. std: standard deviation scaler will result in sigmas. each attribute will be mean centered around 0. ddof delta degree of freedom is set to 1 because it is assumed that the values are samples out of the population and not the entire population. it is incomprehensible to me that the equivalent sklearn method has ddof set to 0. if the attribute has only one value, the value will be set to 0. default is maxabs.">
            <option value="none">none</option>
            <option value="maxabs" selected="true">maxabs</option>
            <option value="minmax">minmax</option>
            <option value="std">std</option>
        </param>
    </xml>
    <xml name="secondary_y">
        <param name="secondary_y" label="secondary_y" type="boolean" truevalue="true" falsevalue="false" checked="false" help="whether to plot on the secondary y-axis. if a listing of string, which columns to plot on the secondary y-axis. default is False."/>
    </xml>
    <xml name="settingxml">
        <param name="settingxml" label="settingxml" type="text" value="PhysiCell_settings.xml" optional="true" help="the settings.xml that is loaded, from which the cell type ID label mapping, is extracted, if this information is not found in the output xml file. set to None or False if the xml file is missing! default is PhysiCell_settings.xml."/>
    </xml>
    <xml name="sharex">
        <param name="sharex" label="sharex" type="boolean" truevalue="true" falsevalue="false" checked="false" help="in case subplots is True, share x-axis by setting some x-axis labels to invisible. default is False."/>
    </xml>
    <xml name="sharey">
        <param name="sharey" label="sharey" type="boolean" truevalue="true" falsevalue="false" checked="false" help="in case subplots is True, share y-axis range and possibly setting some y-axis labels to invisible. default is False."/>
    </xml>
    <xml name="subplots">
        <param name="subplots" label="subplots" type="boolean" truevalue="true" falsevalue="false" checked="false" help="whether to split the plot into subplots, one per column. default is False."/>
    </xml>
    <xml name="title">
        <param name="title" label="title" type="text" value="none" optional="false" help="title to use for the plot. None will print no title. default is None."/>
    </xml>
    <xml name="title_prefix.">
        <param name="title_prefix" label="title" type="text" value="" optional="true" help="title prefix. default is an empty string."/>
    </xml>
    <xml name="verbose">
        <param name="verbose" label="verbose" type="boolean" truevalue="true" falsevalue="false" checked="false" help="setting verbose to True for more text output, while processing. default is False."/>
    </xml>
    <xml name="xlim">
        <param name="xlim" label="xlim" type="text" value="none" optional="false" help="two floats separated by a space. x axis min and max value. None takes min and max from mesh x axis range. default is None."/>
    </xml>
    <xml name="xyequal">
        <param name="xyequal" label="xyequal" type="boolean" truevalue="true" falsevalue="false" checked="true" help="to specify equal axis spacing for x and y axis. default is true."/>
    </xml>
    <xml name="ylim">
        <param name="ylim" label="ylim" type="text" value="none" optional="false" help="two floats separated by a space. y axis min and max value. None takes min and max from mesh y axis range. default is None."/>
    </xml>
    <xml name="yunit">
        <param name="yunit" label="yunit" type="text" value="none" optional="false" help="string to specify y-axis unit. None will not print a unit on the y-axis. default is None."/>
    </xml>
    <xml name="z_axis">
        <param name="z_axis" label="z_axis" type="text" value="none" optional="false" help="for a categorical focus: list of labels; for a numeric focus: list of two floats; None, depending on the focus column variable dtype, extracts labels or min and max values from data. default is None."/>
    </xml>
    <xml name="z_slice">
        <param name="z_slice" label="z_slice" type="float" value="0.0" optional="false" help="z-axis position to slice a 2D xy-plain out of the 3D mesh. if z_slice position numeric but not an exact mesh center coordinate, then z_slice will be adjusted to the nearest mesh center value, the smaller one, if the coordinate lies on a saddle point. default is 0.0."/>
    </xml>
    <!-- test -->
    <xml name="output">
        <collection type="list">
            <element name="initial_attached_cells_graph.txt" value="initial_attached_cells_graph.txt"/>
            <element name="initial_cell_neighbor_graph.txt" value="initial_cell_neighbor_graph.txt"/>
            <element name="initial_cells.mat" value="initial_cells.mat"/>
            <element name="initial_mesh0.mat" value="initial_mesh0.mat"/>
            <element name="initial_microenvironment0.mat" value="initial_microenvironment0.mat"/>
            <element name="initial_spring_attached_cells_graph.txt" value="initial_spring_attached_cells_graph.txt"/>
            <element name="initial.svg" value="initial.svg"/>
            <element name="initial.xml" value="initial.xml"/>
            <element name="legend.svg" value="legend.svg"/>
            <element name="output00000000_attached_cells_graph.txt" value="output00000000_attached_cells_graph.txt"/>
            <element name="output00000000_cell_neighbor_graph.txt" value="output00000000_cell_neighbor_graph.txt"/>
            <element name="output00000000_cells.mat" value="output00000000_cells.mat"/>
            <element name="output00000000_microenvironment0.mat" value="output00000000_microenvironment0.mat"/>
            <element name="output00000000_spring_attached_cells_graph.txt" value="output00000000_spring_attached_cells_graph.txt"/>
            <element name="output00000000.xml" value="output00000000.xml"/>
            <element name="output00000001_attached_cells_graph.txt" value="output00000001_attached_cells_graph.txt"/>
            <element name="output00000001_cell_neighbor_graph.txt" value="output00000001_cell_neighbor_graph.txt"/>
            <element name="output00000001_cells.mat" value="output00000001_cells.mat"/>
            <element name="output00000001_microenvironment0.mat" value="output00000001_microenvironment0.mat"/>
            <element name="output00000001_spring_attached_cells_graph.txt" value="output00000001_spring_attached_cells_graph.txt"/>
            <element name="output00000001.xml" value="output00000001.xml"/>
            <element name="final_attached_cells_graph.txt" value="final_attached_cells_graph.txt"/>
            <element name="final_cell_neighbor_graph.txt" value="final_cell_neighbor_graph.txt"/>
            <element name="final_cells.mat" value="final_cells.mat"/>
            <element name="final_microenvironment0.mat" value="final_microenvironment0.mat"/>
            <element name="final_spring_attached_cells_graph.txt" value="final_spring_attached_cells_graph.txt"/>
            <element name="final.svg" value="final.svg"/>
            <element name="final.xml" value="final.xml"/>
            <element name="PhysiCell_settings.xml" value="PhysiCell_settings.xml"/>
            <!-- test pcdl_make_gif.xml and pcdl_make_movie.xml -->
            <element name="output00000000_oxygen.jpeg" value="output00000000_oxygen.jpeg"/>
            <element name="output00000001_oxygen.jpeg" value="output00000001_oxygen.jpeg"/>
        </collection>
    </xml>
    <!-- meta -->
    <xml name="citation">
        <citation type="bibtex">
        @misc{githubphysicelldataloader,
            author = {Bucher, Elmar},
            year = {2025},
            title = {physicelldataloader},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/elmbeech/physicelldataloader},
        }</citation>
    </xml>
</macros>
