<macros>

    <!-- requirements -->

    <xml name="requirement">
        <requirement type="package" version="3.3.8">pcdl</requirement>
    </xml>

    <!-- input -->

    <xml name="aggregate_num">
        <param argument="--aggregate_num" label="aggregate_num" type="select" display="radio" help="Aggregation function {max, mean, median, min, std, var} for focus_num data.">
            <option value="max">max</option>
            <option value="mean" selected="true">mean</option>
            <option value="median">median</option>
            <option value="min">min</option>
            <option value="std">std</option>
            <option value="var">var</option>
        </param>
    </xml>
    <xml name="allvalues">
        <param argument="--allvalues" label="allvalues" type="boolean" truevalue="true" falsevalue="false" checked="false" help="For numeric data, should only the min and max values or all values be returned?"/>
    </xml>
    <xml name="alpha">
        <param argument="--alpha" label="alpha" type="float" value="1.0" optional="false" help="Alpha channel transparency value between 1 (not transparent at all) and 0 (totally transparent)."/>
    </xml>
    <xml name="attribute">
        <param name="attribute" label="attribute" type="text" value="cell_type" optional="false" help="Listing of mcds.get_cell_df dataframe column names, used for cell attributes."/>
    </xml>
    <xml name="cmap">
        <param argument="--cmap" label="cmap" type="text" value="viridis" optional="false" help="Matplotlib colormap string from https://matplotlib.org/stable/tutorials/colors/colormaps.html ."/>
    </xml>
    <xml name="collapse">
        <param argument="--collapse" label="collapse" type="boolean" truevalue="true" falsevalue="false" checked="true" help="Should all mcds time steps from the time series be collapsed into one big anndata h5ad file, or a many h5ad, one h5ad for each time step?"/>
    </xml>
    <xml name="color">
        <param argument="--color" label="color" type="text" value="none" optional="false" help="Listing of color strings referred to by name, RGB or RGBA code."/>
    </xml>
    <xml name="custom_data_type">
        <param argument="--custom_data_type" label="custom_data_type" type="text" value="" optional="true" help="Parameter to specify custom_data variable types other than float (namely: int, bool, str) like this var:dtype myint:int mybool:bool mystr:str. Downstream float and int will be handled as numeric, bool as Boolean, and str as categorical data."/>
    </xml>
    <xml name="drop">
        <param argument="--drop" label="drop" type="text" value="" optional="true" help="Set of column labels to be dropped for the dataframe. Don't worry: essential columns like ID, coordinates and time will never be dropped. Attention: when the keep parameter is given, then the drop parameter has to be an empty string!"/>
    </xml>
    <xml name="edge_attribute">
        <param argument="--edge_attribute" label="edge_attribute" type="boolean" truevalue="true" falsevalue="false" checked="true" help="Specifies if the spatial Euclidean distance is used for edge attribute, to generate a weighted graph."/>
    </xml>
    <xml name="entropy">
        <param name="entropy" label="values" type="integer" value="1" optional="false" help="Minimal number of values a variable has to have in any of the mcds time steps to be outputted. Variables that have only 1 state carry no information. None is a state too."/>
    </xml>
    <xml name="ext">
        <param argument="--ext" label="ext" type="select" display="radio" help="Output image format. Possible formats are jpeg, png, and tiff.">
            <option value="jpeg" selected="true">jpeg</option>
            <!--
        <option value="png">png</option>
        <option value="tiff">tiff</option>
        -->
        </param>
    </xml>
    <xml name="extrema">
        <param argument="--extrema" label="extrema" type="text" value="none" optional="false" help="Wwo floats separated by a space. None takes min and max from data."/>
    </xml>
    <xml name="figbgcolor">
        <param argument="--figbgcolor" label="figbgcolor" type="text" value="none" optional="false" help="Figure background color. None is transparent (png) or white (jpeg, tiff)."/>
    </xml>
    <xml name="figsizepx">
        <param argument="--figsizepx" label="figsizepx" type="text" value="640 480" optional="false" help="Size of the figure in pixels (integer), x y. The given x and y will be rounded to the nearest even number, to be able to generate movies from the images. default is 640 480."/>
    </xml>
    <xml name="fill">
        <param argument="--fill" label="fill" type="boolean" truevalue="true" falsevalue="false" checked="true" help="True generates a matplotlib contourf plot. False generates a matplotlib contour plot."/>
    </xml>
    <xml name="focus_cell">
        <param name="focus_cell" label="focus" type="text" value="cell_type" optional="false" help="Column name from the pcdl_get_cell_attribute_list listing."/>
    </xml>
    <xml name="focus_subs">
        <param name="focus_subs" label="focus" type="text" optional="false" help="Substrate from the pcdl_get_substrate_list listing."/>
    </xml>
    <xml name="focus_cat">
        <param name="focus_cat" label="focus_cat" type="text" value="none" optional="false" help="Categorical or boolean data column within dataframe specified under frame (pcdl_get_cell_attribute_list or pcdl_get_substrate_list). None is total, which is all agents or voxels, no categories."/>
    </xml>
    <xml name="focus_num">
        <param name="focus_num" label="focus_num" type="text" value="none" optional="false" help="Numerical data column within dataframe specified under frame (pcdl_get_cell_attribute_list or pcdl_get_substrate_list). None is count, agent or voxel count."/>
    </xml>
    <xml name="frame">
        <param argument="--frame" label="frame" type="select" display="radio" help="To specifies the data dataframe from which the values are taken. Cell: agent centric value. Conc: whole domain centric substarte concentration values.">
            <option value="cell" selected="true">cell</option>
            <option value="conc">conc</option>
        </param>
    </xml>
    <xml name="framerate">
        <param argument="--framerate" label="values" type="integer" value="12" optional="false" help="Specifies how many images per second will be used. Humans are capable of processing 12 images per second and seeing them individually. Higher rates are seen as motion."/>
    </xml>
    <xml name="graph">
        <param argument="--graph" label="graph" type="boolean" truevalue="true" falsevalue="false" checked="true" help="Should neighbor graph, attach graph, and attached spring graph be extracted and loaded into the anndata object?"/>
    </xml>
    <xml name="graph_type">
        <param argument="--graph_type" label="graph_type" type="select" display="radio" help="Specify which physicell graph output data should be processed. Neighbor: neighbor graph dictionary. Attached: attached graph dictionary. Spring: spring attache graph dictionary.">
            <option value="neighbor" selected="true">neighbor</option>
            <option value="attached">attached</option>
            <option value="spring">spring</option>
        </param>
    </xml>
    <xml name="grid">
        <param argument="--grid" label="grid" type="boolean" truevalue="true" falsevalue="false" checked="true" help="Plot axis grid lines."/>
    </xml>
    <xml name="interface">
        <param name="interface" label="interface" type="select" display="radio" help="Specify the image format from which the gif will be generated. These images can be generated with the pcdl_plot_scatter or pcdl_plot_contour function.">
            <option value="jpeg" selected="true">jpeg</option>
            <!--
        <option value="png">png</option>
        <option value="tiff">tiff</option>
        -->
        </param>
    </xml>
    <xml name="keep">
        <param argument="--keep" label="keep" type="text" value="" optional="true" help="Set of column labels to be kept in the dataframe. Set values=1 to be sure that all variables are kept. Don't worry: essential columns like ID, coordinates and time will always be kept."/>
    </xml>
    <xml name="legend">
        <param argument="--legend" label="legend" type="select" display="radio" help="If True or reverse, place legend on axis subplots.">
            <option value="false">false</option>
            <option value="reverse">reverse</option>
            <option value="true" selected="true">true</option>
        </param>
    </xml>
    <xml name="legend_loc">
        <param argument="--legend_loc" label="legend_loc" type="select" display="radio" help="The location of the categorical legend, if applicable.">
            <option value="best">best</option>
            <option value="upper right">upper right</option>
            <option value="upper center"/>
            <option value="upper left"/>
            <option value="center left"/>
            <option value="lower left" selected="true"/>
            <option value="lower center"/>
            <option value="lower right"/>
            <option value="center right"/>
            <option value="center"/>
        </param>
    </xml>
    <xml name="linestyle">
        <param argument="--linestyle" label="linestyle" type="select" display="radio" help="Matplotlib line style {-, --, .-, :} string.">
            <option value="-" selected="true">-</option>
            <option value="--">--</option>
            <option value=".-">.-</option>
            <option value=":">:</option>
        </param>
    </xml>
    <xml name="linewidth">
        <param argument="--linewidth" label="linewidth" type="text" value="none" optional="false" help="Line width in points, integer."/>
    </xml>
    <xml name="logy">
        <param argument="--logy" label="logy" type="boolean" truevalue="true" falsevalue="false" checked="false" help="If True, then y axis is natural log scaled."/>
    </xml>
    <xml name="microenv">
        <param argument="--microenv" label="microenv" type="boolean" truevalue="true" falsevalue="false" checked="true" help="Should the microenvironment be extracted and loaded into the anndata object? Setting microenv to False will use less memory and speed up processing."/>
    </xml>
    <xml name="node_attribute">
        <param argument="--node_attribute" label="node_attribute" type="text" value="" optional="true" help="Listing of pcdl_get_cell_attribute attributes, used for node attributes."/>
    </xml>
    <xml name="path">
        <param name="path" label="data_collection" type="data_collection" collection_type="list" help="PhysiCell output data collection."/>
    </xml>
    <xml name="physiboss">
        <param argument="--physiboss" label="physiboss" type="boolean" truevalue="true" falsevalue="false" checked="true" help="If found, should physiboss state data be extracted and loaded into the anndata object?"/>
    </xml>
    <xml name="s">
        <param argument="--s" label="s" type="float" value="1.0" optional="false" help="Scatter plot dot size scale factor. With figsizepx extracted from initial.svg, scale factor 1.0 should be ok. Adjust if necessary."/>
    </xml>
    <xml name="scale">
        <param argument="--scale" label="scale" type="select" display="radio" help="Specify how the data should be scaled. Possible values are None, maxabs, minmax, std. None: no scaling. Set scale to None if you would like to have raw data or entirely scale, transform, and normalize the data later. Maxabs: maximum absolute value distance scaler will linearly map all values into a [-1, 1] interval. If the original data has no negative values, the result will be the same as with the minmax scaler (except with attributes with only one value). If the attribute has only zeros, the value will be set to 0. Minmax: minimum maximum distance scaler will map all values linearly into a [0, 1] interval. If the attribute has only one value, the value will be set to 0. Std: standard deviation scaler will result in sigmas. Each attribute will be mean centered around 0. Ddof delta degree of freedom is set to 1 because it is assumed that the values are samples out of the population and not the entire population. It is incomprehensible to me that the equivalent sklearn method has ddof set to 0. If the attribute has only one value, the value will be set to 0.">
            <option value="none">none</option>
            <option value="maxabs" selected="true">maxabs</option>
            <option value="minmax">minmax</option>
            <option value="std">std</option>
        </param>
    </xml>
    <xml name="secondary_y">
        <param argument="--secondary_y" label="secondary_y" type="boolean" truevalue="true" falsevalue="false" checked="false" help="Plot on the secondary y-axis?"/>
    </xml>
    <xml name="sharex">
        <param argument="--sharex" label="sharex" type="boolean" truevalue="true" falsevalue="false" checked="false" help="In case subplots is True, share x-axis by setting some x-axis labels to invisible."/>
    </xml>
    <xml name="sharey">
        <param argument="sharey" label="sharey" type="boolean" truevalue="true" falsevalue="false" checked="false" help="In case subplots is True, share y-axis range and possibly setting some y-axis labels to invisible."/>
    </xml>
    <xml name="subplots">
        <param argument="--subplots" label="subplots" type="boolean" truevalue="true" falsevalue="false" checked="false" help="`Should the plot be split into subplots, one per curve?"/>
    </xml>
    <xml name="title">
        <param argument="--title" label="title" type="text" value="none" optional="false" help="Title to use for the plot. None will print no title."/>
    </xml>
    <xml name="title_prefix.">
        <param argument="--title_prefix" label="title" type="text" value="" optional="true" help="Title prefix."/>
    </xml>
    <xml name="verbose">
        <param argument="--verbose" label="verbose" type="boolean" truevalue="true" falsevalue="false" checked="false" help="Setting verbose to True for more text output, while processing."/>
    </xml>
    <xml name="xlim">
        <param argument="--xlim" label="xlim" type="text" value="none" optional="false" help="Two floats separated by a space. X axis min and max value. None takes min and max from mesh x axis range."/>
    </xml>
    <xml name="xyequal">
        <param argument="--xyequal" label="xyequal" type="boolean" truevalue="true" falsevalue="false" checked="true" help="To specify equal axis spacing for x and y axis."/>
    </xml>
    <xml name="ylim">
        <param argument="--ylim" label="ylim" type="text" value="none" optional="false" help="Two floats separated by a space. y axis min and max value. None takes min and max from mesh y axis range."/>
    </xml>
    <xml name="yunit">
        <param argument="--yunit" label="yunit" type="text" value="none" optional="false" help="String to specify y-axis unit. None will not print a unit on the y-axis."/>
    </xml>
    <xml name="z_axis">
        <param argument="--z_axis" label="z_axis" type="text" value="none" optional="false" help="For a categorical focus: list of labels; for a numeric focus: list of two floats; None, depending on the focus column variable dtype, extracts labels or min and max values from data."/>
    </xml>
    <xml name="z_slice">
        <param argument="--z_slice" label="z_slice" type="float" value="0.0" optional="false" help="Z-axis cut position to slice a 2D xy-plain out of the 3D mesh. if z_slice position numeric but not an exact mesh center coordinate, then z_slice will be adjusted to the nearest mesh center value, the smaller one, if the coordinate lies on a saddle point."/>
    </xml>

    <!-- test -->

    <xml name="output">
        <collection type="list">
            <element name="initial_attached_cells_graph.txt" value="initial_attached_cells_graph.txt"/>
            <element name="initial_cell_neighbor_graph.txt" value="initial_cell_neighbor_graph.txt"/>
            <element name="initial_cells.mat" value="initial_cells.mat"/>
            <element name="initial_mesh0.mat" value="initial_mesh0.mat"/>
            <element name="initial_microenvironment0.mat" value="initial_microenvironment0.mat"/>
            <element name="initial_spring_attached_cells_graph.txt" value="initial_spring_attached_cells_graph.txt"/>
            <element name="initial.svg" value="initial.svg"/>
            <element name="initial.xml" value="initial.xml"/>
            <element name="legend.svg" value="legend.svg"/>
            <element name="output00000000_attached_cells_graph.txt" value="output00000000_attached_cells_graph.txt"/>
            <element name="output00000000_cell_neighbor_graph.txt" value="output00000000_cell_neighbor_graph.txt"/>
            <element name="output00000000_cells.mat" value="output00000000_cells.mat"/>
            <element name="output00000000_microenvironment0.mat" value="output00000000_microenvironment0.mat"/>
            <element name="output00000000_spring_attached_cells_graph.txt" value="output00000000_spring_attached_cells_graph.txt"/>
            <element name="output00000000.xml" value="output00000000.xml"/>
            <element name="output00000001_attached_cells_graph.txt" value="output00000001_attached_cells_graph.txt"/>
            <element name="output00000001_cell_neighbor_graph.txt" value="output00000001_cell_neighbor_graph.txt"/>
            <element name="output00000001_cells.mat" value="output00000001_cells.mat"/>
            <element name="output00000001_microenvironment0.mat" value="output00000001_microenvironment0.mat"/>
            <element name="output00000001_spring_attached_cells_graph.txt" value="output00000001_spring_attached_cells_graph.txt"/>
            <element name="output00000001.xml" value="output00000001.xml"/>
            <element name="final_attached_cells_graph.txt" value="final_attached_cells_graph.txt"/>
            <element name="final_cell_neighbor_graph.txt" value="final_cell_neighbor_graph.txt"/>
            <element name="final_cells.mat" value="final_cells.mat"/>
            <element name="final_microenvironment0.mat" value="final_microenvironment0.mat"/>
            <element name="final_spring_attached_cells_graph.txt" value="final_spring_attached_cells_graph.txt"/>
            <element name="final.svg" value="final.svg"/>
            <element name="final.xml" value="final.xml"/>
            <element name="PhysiCell_settings.xml" value="PhysiCell_settings.xml"/>
            <!-- test pcdl_make_gif.xml and pcdl_make_movie.xml -->
            <element name="output00000000_oxygen.jpeg" value="output00000000_oxygen.jpeg"/>
            <element name="output00000001_oxygen.jpeg" value="output00000001_oxygen.jpeg"/>
        </collection>
    </xml>

    <!-- meta -->

    <xml name="citation">
        <citation type="bibtex">
        @misc{githubphysicelldataloader,
            author = {Bucher, Elmar},
            year = {2025},
            title = {physicelldataloader},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/elmbeech/physicelldataloader},
        }</citation>
    </xml>
</macros>
