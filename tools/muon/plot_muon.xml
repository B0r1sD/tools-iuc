<tool id="plot_muon" name="muon plot" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
@CMD@
        ]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[
@CMD_imports@
@CMD_read_inputs@

#if $method.method == "pl.embedding"
embeddings_plot = mu.pl.embedding(
    mdata,
    basis='$method.basis',
    @CMD_params_embedding@
    return_fig=True
)

#else if $method.method == "pl.histogram"
plot = mu.pl.histogram(
    mdata,
    #if $method.key_variables.type == "var_names"
        #set $key_list = mdata.var_names
    #else if $method.key_variables.type == "obs"
        #set $key_list = mdata.obs.select_dtypes(exclude=['category']).columns
    #else if $method.key_variables.type == "custom"
        #set $key_list=([x.strip() for x in str($method.key_variables.keys).split(',')])
    #end if
    keys=$key_list,
    #if $method.groupby
    groupby='$method.groupby',
    #end if
    return_fig=True
)

#else if $method.method == "pl.mofa"
plot = mu.pl.mofa(
    mdata,
    @CMD_params_embedding@
    return_fig=True
)

#else if $method.method == "pl.mofa_loadings"
plot = mu.pl.mofa_loadings(
    mdata,
    #if $method.factors != ''
    factors='$method.factors',
    #end if
    include_lowest=$method.include_lowest,
    #if str($method.n_points) != ''
    n_points=$method.n_points,
    #end if
)

#else if $method.method == "pl.scatter"
plot = mu.pl.scatter(
    mdata,
    #if $method.x != ''
    x='$method.x',
    #end if
    #if $method.x != ''
    y='$method.y',
    #end if
    #if $method.color != ''
    color='$method.color',
    #end if
    use_raw=$method.use_raw,
    #if $method.layers != ''
    layers='$method.layers',
    #end if
    return_fig=True
)

#else if $method.method == "pl.umap"
umap_plot = mu.pl.umap(
    mdata,
    @CMD_params_embedding@
    return_fig=True
)

plot.savefig("plot.png")
#end if
]]></configfile>
    </configfiles>
    <inputs>
        <expand macro="inputs_mudata"/>
        <conditional name="method">
            <param name="method" type="select" label="Method used for plotting">
                    <option value="pl.embedding">Scatter: Scatter plot along observations (.obs column), using 'muon.pl.embedding'</option>
                    <option value="pl.histogram">Histogram: Plot Histogram of Fragment lengths within specified region, using 'muon.pl.histogram'</option>
                    <option value="pl.mofa">Scatter: Scatter plot in MOFA factor coordinates, using 'muon.pl.mofa'</option>
                    <option value="pl.mofa_loadings">Ranking: Rank genes according to contributions to MOFA factors, using 'muon.pl.mofa_loadings'</option>
                    <option value="pl.scatter">Scatter: Scatter plot along observations or variable axes, using 'muon.pl.scatter'</option>
                    <option value="pl.umap">Scatter: UMAP scatter plot, using 'muon.pl.umap'</option>
            </param>
            <when value="pl.embedding">
                <param argument="basis" type="text" value="X_pca" label="Name of the obsm basis to use" help="can also be a basis inside any modality, e.g. 'rna:X_pca'"/>
                <expand macro="params_embedding"/>
            </when>
            <when value="pl.histogram">
                <expand macro="param_keys"/>
                <param argument="group_by" type="text" value="" optional="true" label="Column name(s) of .obs slot of the AnnData object according to which the plot is split"/>
            </when>
            <when value="pl.mofa">
                <expand macro="params_embedding"/>
            </when>
            <when value="pl.mofa_loadings">
                <param argument="factors" type="text" value="" optional="true" label="Comma separated list of factors" help="For example, '1,2,3' means [1, 2, 3], first, second, third factors">
                    <expand macro="sanitize_query" />
                </param>
                <param argument="include_lowest" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Whether to show the variables with both highest and lowest loadings"/>
                <param argument="n_points" type="integer" value="" optional="true" label="Number of variables to plot for each factor"/>
            </when>
            <when value="pl.scatter">
                <param argument="x" type="text" value="" optional="true" label="X-coordinate"/>
                <param argument="y" type="text" value="" optional="true" label="Y-coordinate"/>
                <expand macro="param_color"/>
                <expand macro="param_use_raw" label="Use .raw attribute of the modality where a feature (from color) is derived from." checked="true"/>
                <param argument="layers" type="text" value="" optional="true" label="Names of the layers where x, y, and color come from"/>
            </when>
            <when value="pl.umap">
                <expand macro="params_embedding"/>
            </when>
        </conditional>
        <expand macro="inputs_common_advanced" />
    </inputs>
    <outputs>
        <data name="hidden_output" format="txt" label="Log file" hidden="true" >
            <filter>advanced_common['show_log']</filter>
        </data>
        <data name="plot" format="png" label="Plot" from_work_dir="plot.png"/>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <!-- test1: pl.embedding -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.embedding"/>
            <param name="basis" value="X_pca"/>
            <param name="use_raw" value="False"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.embedding"/>
                    <has_text_matching expression="basis='X_pca'"/>
                    <has_text_matching expression="use_raw=False"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.embedding.png" compare="sim_size" delta_frac="0.1"/>
        </test>
        <test expect_num_outputs="2">
            <!-- test2 pl.histogram -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.histogram"/>
            <param name="keys" value="total_counts"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.embedding"/>
                    <has_text_matching expression="keys='total_counts'"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.histogram.png" compare="sim_size" delta_frac="0.1"/>
        </test>
        <test expect_num_outputs="2">
            <!-- test3: pl.mofa -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.mofa"/>
            <param name="use_raw" value="False"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.mofa"/>
                    <has_text_matching expression="use_raw=False"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.mofa.png" compare="sim_size" delta_frac="0.1"/>
        </test>
        <test expect_num_outputs="2">
            <!-- test4: pl.mofa_loadings -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.mofa_loadings"/>
            <param name="factors" value="1,2,3"/>
            <param name="include_lowest" value="True"/>
            <param name="n_points" value="0"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.mofa_loadings"/>
                    <has_text_matching expression="factors=1"/>
                    <has_text_matching expression="include_lowest=True"/>
                    <has_text_matching expression="n_points=0"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.mofa_loadings.png" compare="sim_size" delta_frac="0.1"/>
        </test>
        <test expect_num_outputs="2">
            <!-- test5: pl.scatter -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.scatter"/>
            <param name="use_raw" value="False"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.mofa_loadings"/>
                    <has_text_matching expression="use_raw=False"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.scatter.png" compare="sim_size" delta_frac="0.1"/>
        </test>
        <test expect_num_outputs="2">
            <!-- test6: pl.umap -->
            <param name="mdata" value="pbmc3k_chr21_processed.h5mu"/>
            <param name="method" value="pl.umap"/>
            <param name="use_raw" value="False"/>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="mu.pl.umap"/>
                    <has_text_matching expression="use_raw=False"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png" file="pl.umap.png" compare="sim_size" delta_frac="0.1"/>
        </test>
    </tests>
    <help><![CDATA[
Scatter: Scatter plot along observations (.obs column) ('muon.pl.embedding')
============================================================================

        Produce a scatter plot in the define basis (.obs), which can also be a basis inside any modality.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.embedding.html#muon.pl.embedding>`__

Scatter: Scatter plot in MOFA factor coordinates ('muon.pl.mofa')
=================================================================

        Scatter plot in MOFA factors coordinates.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.mofa.html#muon.pl.mofa>`__

Scatter: Scatter plot along observations or variable axes ('muon.pl.scatter')
=============================================================================

        Scatter plot along observations or variables axes. Variables in each modality can be referenced.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.scatter.html#muon.pl.scatter>`__

Scatter: UMAP scatter plot ('muon.pl.umap')
===========================================

        UMAP Scatter plot.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.umap.html#muon.pl.umap>`__

Histogram: Plot Histogram of Fragment lengths within specified region ('muon.pl.histogram')
===========================================================================================

        Plot Histogram of Fragment lengths within specified region.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.histogram.html#muon.pl.histogram>`__

Ranking: Rank genes according to contributions to MOFA factors ('muon.pl.mofa_loadings')
========================================================================================

        Rank genes according to contributions to MOFA factors.

        More details on the `muon documentation
        <https://muon.readthedocs.io/en/latest/api/generated/muon.pl.mofa_loadings.html#muon.pl.mofa_loadings>`__
    ]]></help>
    <expand macro="citations"/>
</tool>