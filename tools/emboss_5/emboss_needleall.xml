<tool id="emboss_needleall" name="needle" version="@VERSION6@.1">
  <description>Many-to-many Needleman-Wunsch global alignment</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="bio_tools" />
  <expand macro="requirements6" />
  <code file="emboss_format_corrector.py" />
  <version_command>needleall -version</version_command>
  <command detect_errors="exit_code"><![CDATA[
needleall
-asequence '$asequence'
-bsequence '$bsequence'
-outfile '$out_file1'
-gapopen $gapopen
-gapextend $gapextend
-brief $brief
-aformat3 $out_format1
-auto
#if $datafile
-datafile $datafile
#end if
#if $endgap.endweight == 'yes'
-endopen $endgap.endopen
-endextend $endgap.endextend
#end if
-minscore $minscore
]]></command>
  <inputs>
    <param argument="-asequence" type="data" format="fasta" label="Sequence set 1" />
    <param argument="-bsequence" type="data" format="fasta" label="Sequence seet 2" />
    <expand macro="scoring_matrix"/>
    <param argument="-gapopen" type="float" value="10.0" min="1.0" max="100.0" label="Gap open penalty" />
    <param argument="-gapextend" type="float" value="0.5" min="0.0" max="10.0" label="Gap extension penalty" />
    <conditional name="endgap">
        <param argument="-endweight" type="select" label="Apply end gap penalties?" help="">
            <option value="yes">yes</option>
            <option value="no" selected="true">no</option>
        </param>
        <when value="yes">
            <param argument="-endopen" type="float" value="10.0" min="0.0" max="100.0" label="Penalty for creation of and end gap." help="The best value depends on the choice of comparison matrix. The default value assumes you are using the EBLOSUM62 matrix for protein sequences, and the EDNAFULL matrix for nucleotide sequences."/>
            <param argument="-endextend" type="float" value="0.5" min="0.0" max="10.0" label="The end gap extensionpenalty" help="this penalty is added to the end gap penalty for each base or residue in the end gap."/>
        </when>
        <when value="no"/>
    </conditional>
    <param argument="-minscore" type="float" value="1.0" min="-10.0" max="100.0" label="Minimum alignment score to report an alignment." help=""/>
    <param argument="-brief" type="select" label="Brief identity and similarity">
      <option value="yes">Yes</option>
      <option value="no">No</option>
    </param>
    <param name="out_format1" type="select" label="Output alignment file format">
      <option value="srspair">SRS pair (p)</option>
      <option value="simple">Simple (m)</option>
      <option value="fasta">FASTA (m)</option>
      <option value="msf">MSF (m)</option>
      <option value="srs">SRS (m)</option>
      <option value="pair">Pair (p)</option>
      <option value="markx0">Markx0 (p)</option>
      <option value="markx1">Markx1 (p)</option>
      <option value="markx2">Markx2 (p)</option>
      <option value="markx3">Markx3 (p)</option>
      <option value="markx10">Markx10 (p)</option>
      <option value="score">Score (p)</option>
    </param>
  </inputs>
  <outputs>
    <data name="out_file1" format="needle" />
  </outputs>
  <tests>
    <test>
      <param name="asequence" value="emboss_needleall_input1.fa"/>
      <param name="bsequence" value="emboss_needleall_input2.fa"/>
      <param name="gapopen" value="10"/>
      <param name="gapextend" value="0.5"/>
      <param name="brief" value="yes"/>
      <param name="out_format1" value="score"/>
      <output name="out_file1" file="emboss_needleall_out.score"/>
    </test>
    <test><!-- test fasta output -->
      <param name="asequence" value="emboss_needleall_input1.fa"/>
      <param name="bsequence" value="emboss_needleall_input2.fa"/>
      <param name="gapopen" value="10"/>
      <param name="gapextend" value="0.5"/>
      <param name="brief" value="yes"/>
      <param name="out_format1" value="fasta"/>
      <output name="out_file1" file="emboss_needleall_out.fasta" ftype="fasta"/>
    </test>
     <test><!-- test with pair output, endgap penalties and custom scoring matrix -->
      <param name="asequence" value="emboss_needleall_input1.fa"/>
      <param name="bsequence" value="emboss_needleall_input2.fa"/>
      <param name="gapopen" value="10"/>
      <param name="gapextend" value="0.5"/>
      <param name="endweight" value="yes"/>
      <param name="endopen" value="13.37"/>
      <param name="endextend" value="2.5"/>
      <param name="brief" value="yes"/>
      <param name="datafile" value="EPAM30"/>
      <param name="out_format1" value="pair"/>
      <output name="out_file1" file="emboss_needleall_out.pair" lines_diff="10"/>
    </test>
  </tests>
  <help><![CDATA[
.. class:: warningmark

needleall reads in two nucleotide or protein sequences inputs. Both can be one or more sequences. All sequences in the first ionput are aligned to all sequences in the second input.

-----

**Syntax**

This tool uses the Needleman-Wunsch global alignment algorithm to find the optimum alignment (including gaps) of two sequences when considering their entire length.

- **Optimal alignment:** Dynamic programming methods ensure the optimal global alignment by exploring all possible alignments and choosing the best.

- **The Needleman-Wunsch algorithm** is a member of the class of algorithms that can calculate the best score and alignment in the order of mn steps, (where 'n' and 'm' are the lengths of the two sequences).

- **Gap open penalty:** [10.0 for any sequence] The gap open penalty is the score taken away when a gap is created. The best value depends on the choice of comparison matrix. The default value assumes you are using the EBLOSUM62 matrix for protein sequences, and the EDNAFULL matrix for nucleotide sequences. (Floating point number from 1.0 to 100.0)

- **Gap extension penalty:** [0.5 for any sequence] The gap extension, penalty is added to the standard gap penalty for each base or residue in the gap. This is how long gaps are penalized. Usually you will expect a few long gaps rather than many short gaps, so the gap extension penalty should be lower than the gap penalty. An exception is where one or both sequences are single reads with possible sequencing errors in which case you would expect many single base gaps. You can get this result by setting the gap open penalty to zero (or very low) and using the gap extension penalty to control gap scoring. (Floating point number from 0.0 to 10.0)

  ]]></help>
  <expand macro="citations" />
</tool>
