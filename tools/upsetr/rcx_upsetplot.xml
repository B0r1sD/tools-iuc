<tool id="rcx_upsetplot" name="upsetplot" version="@TOOL_VERSION@+galaxy0" profile="23.0">
    <description>Upset plot visualization tool using UpSetR</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">r-upsetr</requirement>
        <requirement type="package" version="19.0.0">r-arrow</requirement>
    </requirements>
    <required_files>
        <include path="utils.r" />
    </required_files>
    <expand macro="creator" />

    <command detect_errors="exit_code"><![CDATA[
        Rscript -e 'source("${__tool_directory__}/utils.r")' -e 'source("${run_script}")'
        #if $export_R_script
        && cat ${run_script} >> $script
        #end if
    ]]></command>

    <configfiles>
        <configfile name="run_script"><![CDATA[
        file_name <- "$input_data"
        file_extension <- "$input_data.ext"
        data_input <- load_data(file_name, file_extension)
        
        data_input[data_input != 0] <- 1

        png("upsetplot.png", width = 12, height = 12, units = 'in', res = 600)
        p <- UpSetR::upset(data_input, 
                           order.by = "$sort_by", 
                           #if $nintersects == 0
                           nintersects = NA,
                           #else 
                           nintersects = $nintersects,
                           #end if
                           #if $group_by_sets
                           group.by = "sets",
                           #end if
                           #if "$empty_intersections"
                           empty.intersections = "on"
                           #end if
                         )
        print(p)
        dev.off()
        ]]></configfile>
    </configfiles>

    <inputs>
        <expand macro="upsetplot_param"/>
    </inputs>

    <outputs>
        <data name="upsetplot" format="png" label="Upset plot on ${on_string}" from_work_dir="upsetplot.png"/>        
        <data name="script" format="txt" label="R script">
            <filter>export_R_script</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="input_data" value="upsetplot_test_data.txt"/>
            <param name="sort_by" value="freq"/>
            <output name="upsetplot" ftype="png">
                <assert_contents>
                    <has_size size="1164615" delta="200"/>
                </assert_contents>
            </output>          
        </test>
    </tests>

    <help><![CDATA[
recetox-upsetplot Help
======================

Overview
--------

The `recetox-upsetplot` tool generates **UpSet plots**, a visualization technique for analyzing set intersections. UpSet plots are similar to Venn diagrams but are particularly advantageous when working with more than three sets, where Venn diagrams become overly complex and difficult to interpret.

An UpSet plot consists of three main components:
1. **Set Sizes (Left)**: A bar chart showing the size of each individual set.
2. **Intersections (Center)**: A matrix of black dots indicating which sets are part of each intersection.
3. **Intersection Sizes (Top)**: A bar chart showing the size of each intersection.

For more information, refer to the official [UpSetR documentation](https://github.com/hms-dbmi/UpSetR).

Input
-----

The tool expects a **dataframe** in one of the following formats:
- **CSV**
- **Tabular**
- **Parquet**

Each column in the input corresponds to a set, and intersections are calculated based on the columns. If the input is not a binary matrix (i.e., values are not 0 or 1), all non-zero values will automatically be converted to 1.

### Example Input
| Set1 | Set2 | Set3 |
|------|------|------|
| 1    | 0    | 1    |
| 0    | 1    | 1    |
| 1    | 1    | 0    |

### Example Output
The tool will generate an UpSet plot visualizing the intersections between `Set1`, `Set2`, and `Set3`.

Parameters
----------

The following options allow you to customize the plot:

- **Sort Bars By** (`sort_by`): Determines how the intersection bars are sorted. Options:
  - `freq`: Sort by intersection size (default).
  - `degree`: Sort by the number of sets involved in the intersection.

- **Empty Intersections** (`empty_intersections`): Whether to include intersections with zero elements in the plot. Default is to hide them.

- **Number of Intersections** (`nintersects`): Limits the number of intersections displayed. Default is `0`, which shows all intersections.

- **Group by Sets** (`group_by_sets`): If enabled, intersections are grouped by the original sets. By default, intersections are grouped by the number of sets involved.

Output
------

The tool generates the following outputs:
1. **UpSet Plot (PNG)**: A high-resolution PNG image of the UpSet plot.
2. **R Script (Optional)**: The R script used to generate the plot, if the `Export R Script` option is enabled.

Links
-----

- **UpSetR Documentation**: [https://github.com/hms-dbmi/UpSetR](https://github.com/hms-dbmi/UpSetR)
- **Galaxy Tool Repository**: [https://github.com/galaxyproject/tools-iuc](https://github.com/galaxyproject/tools-iuc)

    ]]></help>
    <expand macro="citations_upset" />
</tool>