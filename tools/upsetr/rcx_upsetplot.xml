<tool id="rcx_upsetplot" name="upsetplot" version="@TOOL_VERSION@+galaxy0" profile="23.0">
    <description>Upset plot visualization tool using UpSetR</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">r-upsetr</requirement>
        <requirement type="package" version="19.0.0">r-arrow</requirement>
    </requirements>
    <required_files>
        <include path="utils.r" />
    </required_files>
    <expand macro="creator" />

    <command detect_errors="exit_code"><![CDATA[
        Rscript -e 'source("${__tool_directory__}/utils.r")' -e 'source("${run_script}")'
        #if $export_R_script
        && cat ${run_script} >> $script
        #end if
    ]]></command>

    <configfiles>
        <configfile name="run_script"><![CDATA[
        file_name <- "$input_data"
        file_extension <- "$input_data.ext"
        data_input <- load_data(file_name, file_extension)
        
        data_input[data_input != 0] <- 1

        png("upsetplot.png", width = 12, height = 12, units = 'in', res = 600)
        p <- UpSetR::upset(
            data_input,
            #if $order_by == "both"
            order.by = c('freq', 'degree'),
            #else
            order.by = "$order_by",
            #end if
            nsets = $nsets,
            #if $nintersects == 0
            nintersects = NA,
            #else 
            nintersects = $nintersects,
            #end if
            group.by = '$group_by',
            #if $cutoff
            cutoff = $cutoff,
            #end if
            empty.intersections = $empty_intersections
        )
        print(p)
        dev.off()
        ]]></configfile>
    </configfiles>

    <inputs>
        <param name="input_data" type="data" format="csv,tsv,txt,tabular,parquet" label="Input table" help= "Input file in a tabular/tsv/csv/parquet format"/>
        <param type="select" name="order_by" label="Sort the bars based on frequency, degree or both?" help="Whether to sort the bars in UpSet plot based on frequency (largest frequency first), or degree (largest overlap first)">
            <option value="freq" selected="true">frequency</option> 
            <option value="degree">degree</option>
            <option value="both">both</option>
        </param>
        <param name="nsets" type="integer" min="0" max="100" value="5" label="nsets" 
               help="The number of sets to include in the plot. This determines how many sets will be visualized in the UpSet plot, starting with the largest sets. Default is 5." />
        <param label="Number of intersections to plot" optional="true" name="nintersects" type="integer" value="0" help="Number of intersections to plot. If value set to 0, all intersections will be plotted."/>  
        <param name="group_by" type="boolean" checked="false" truevalue="sets" falsevalue="degree" label="Group bars by sets?" help="Whether group bars for each set (based on their set size)."/>   
        <param name="empty_intersections" type="boolean" checked="false" truevalue="TRUE" falsevalue="NULL" label="Include empty intersections?" help="Whether to plot also empty intersections to the limit of number of intersections. Otherwise, empty intersections are by default omitted."/>   
        <param name="cutoff" type="integer" min="0" label="cutoff" optional="true" 
               help="A threshold for filtering intersections. Only intersections with a size greater than or equal to this value will be included in the plot. Leave empty to include all intersections." />
        <param name="export_R_script" type="boolean" checked="false" truevalue="TRUE" falsevalue="FALSE" label="Export the R script to reproduce the analysis" help="Check this box to export the script executed in the Galaxy tool as an R file to be able to reproduce the same processing offline. Not that in this case, the file paths need to be altered and all the dependencies have to be managed manually."/>
    </inputs>

    <outputs>
        <data name="upsetplot" format="png" label="Upset plot on ${on_string}" from_work_dir="upsetplot.png"/>        
        <data name="script" format="txt" label="R script">
            <filter>export_R_script</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="input_data" value="upsetplot_test_data.txt" ftype="tabular"/>
            <param name="order_by" value="freq"/>
            <output name="upsetplot" ftype="png">
                <assert_contents>
                    <has_size size="1164615" delta="200"/>
                </assert_contents>
            </output>          
        </test>
    </tests>

    <help><![CDATA[
recetox-upsetplot Help
======================

Overview
--------

The `recetox-upsetplot` tool generates **UpSet plots**, a visualization technique for analyzing set intersections. UpSet plots are similar to Venn diagrams but are particularly advantageous when working with more than three sets, where Venn diagrams become overly complex and difficult to interpret.

An UpSet plot consists of three main components:
1. **Set Sizes (Left)**: A bar chart showing the size of each individual set.
2. **Intersections (Center)**: A matrix of black dots indicating which sets are part of each intersection.
3. **Intersection Sizes (Top)**: A bar chart showing the size of each intersection.

For more information, refer to the official [UpSetR documentation](https://github.com/hms-dbmi/UpSetR).

Input
-----

The tool expects a **dataframe** in one of the following formats:
- **CSV**
- **Tabular**
- **Parquet**

Each column in the input corresponds to a set, and intersections are calculated based on the columns. If the input is not a binary matrix (i.e., values are not 0 or 1), all non-zero values will automatically be converted to 1.

### Example Input
| Set1 | Set2 | Set3 |
| 1    | 0    | 1    |
| 0    | 1    | 1    |
| 1    | 1    | 0    |

### Example Output
The tool will generate an UpSet plot visualizing the intersections between `Set1`, `Set2`, and `Set3`.

Parameters
----------

The following options allow you to customize the plot:

- **Sort Bars By** (`sort_by`): Determines how the intersection bars are sorted. Options:
  - `freq`: Sort by intersection size (default).
  - `degree`: Sort by the number of sets involved in the intersection.

- **Empty Intersections** (`empty_intersections`): Whether to include intersections with zero elements in the plot. Default is to hide them.

- **Number of Intersections** (`nintersects`): Limits the number of intersections displayed. Default is `0`, which shows all intersections.

- **Group by Sets** (`group_by_sets`): If enabled, intersections are grouped by the original sets. By default, intersections are grouped by the number of sets involved.

Output
------

The tool generates the following outputs:
1. **UpSet Plot (PNG)**: A high-resolution PNG image of the UpSet plot.
2. **R Script (Optional)**: The R script used to generate the plot, if the `Export R Script` option is enabled.

Links
-----

- **UpSetR Documentation**: [https://github.com/hms-dbmi/UpSetR](https://github.com/hms-dbmi/UpSetR)
- **Galaxy Tool Repository**: [https://github.com/galaxyproject/tools-iuc](https://github.com/galaxyproject/tools-iuc)

    ]]></help>
    <expand macro="citations_upset" />
</tool>