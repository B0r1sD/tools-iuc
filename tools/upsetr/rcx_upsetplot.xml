<tool id="rcx_upsetplot" name="upsetplot" version="@TOOL_VERSION@+galaxy0" profile="23.0">
    <description>Upset plot visualization tool using UpSetR</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">r-upsetr</requirement>
        <requirement type="package" version="19.0.0">r-arrow</requirement>
    </requirements>
    <required_files>
        <include path="utils.r" />
    </required_files>
    <expand macro="creator" />

    <command detect_errors="exit_code"><![CDATA[
        Rscript -e 'source("${__tool_directory__}/utils.r")' -e 'source("${run_script}")'
        #if $export_R_script
        && cat ${run_script} >> $script
        #end if
    ]]></command>

    <configfiles>
        <configfile name="run_script"><![CDATA[
        file_name <- "$input_data"
        file_extension <- "$input_data.ext"
        data_input <- load_data(file_name, file_extension)
        
        data_input[data_input != 0] <- 1

        png("upsetplot.png", width = 12, height = 12, units = 'in', res = 600)
        p <- UpSetR::upset(data_input, 
                           order.by = "$sort_by", 
                           #if $nintersects == 0
                           nintersects = NA,
                           #else 
                           nintersects = $nintersects,
                           #end if
                           #if $group_by_sets
                           group.by = "sets",
                           #end if
                           #if "$empty_intersections"
                           empty.intersections = "on"
                           #end if
                         )
        print(p)
        dev.off()
        ]]></configfile>
    </configfiles>

    <inputs>
        <expand macro="upsetplot_param"/>
    </inputs>

    <outputs>
        <data name="upsetplot" format="png" label="Upset plot on ${on_string}" from_work_dir="upsetplot.png"/>        
        <data name="script" format="txt" label="R script">
            <filter>export_R_script</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="input_data" value="upsetplot_test_data.txt"/>
            <param name="sort_by" value="freq"/>
            <output name="upsetplot" ftype="png">
                <assert_contents>
                    <has_size size="1164615" delta="200"/>
                </assert_contents>
            </output>          
        </test>
    </tests>

    <help><![CDATA[
recetox-upsetplot help
======================

Overview
--------

recetox-upsetplot tool allows to create UpSet plots. UpSet plots similarly as Venn diagrams can be used to visualize intersections of sets. They are in particular advantageous when plotting more than 3 sets, where Venn diagram become very complicated. UpSet plot is composed of 3 main parts: on the left, there are sets (our samples, conditions, ...) and their respective size. In the central part, there are intersections visualized - position of the black dot represent which sets belong to the particular intersection. On the top, there is barplot, visualizing the size of the particular intersections. More information can be found in the [documentation](https://github.com/hms-dbmi/UpSetR).

On the input, a dataframe in csv/tabular/parquet format is expected, where the columns correspond to sets to be plotted (i.e. intersections between columns will be done). If user does not supply the binary matrix, all non-zero values will be by default converted to 1.

There are several options which can be adjusted. The bars can be sorted either by frequency (order by the size, most frequent first) or degree (order by the number of sets involved, e.g. 3 intersections, then 2 intersection combinations, ...). `Empty intersections` argument specifies whether to plot also intersections which have zero elements, which are by default hidden. `Number of intersects` argument allows to limit the number of intersections which will be displayed - default 0 value resuls in showing all intersections. Finally, `Group by sets?` option allows ordering intersections in the plot according to the original sets, whereas by default the grouping is done by the number of sets in the intersection.
    ]]></help>

    <expand macro="citations_upset" />
</tool>